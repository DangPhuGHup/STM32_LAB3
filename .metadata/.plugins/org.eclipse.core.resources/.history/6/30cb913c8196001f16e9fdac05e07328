/*
 * fsm_automatic.c
 *
 *  Created on: Oct 28, 2024
 *      Author: Admin
 */
//#include "fsm_automatic.h"
//int time_red_copy = 0;
//int time_green_copy = 0; // chi lam vay de khai bao thoi
//int time_yellow_copy = 0;
//int led7_1 = 0;          // 2 bien nay de switch giua 2 con led7
//int led7_2 = 0;
//int is_initialized = 0;  // Biến kiểm tra khởi tạo
//void fsm_automatic_Run(){
//	switch(status){
//		    case INIT:
//		    	light_1(black);
//		    	light_2(black);
//		    	status = AUTO_RED_GREEN;
//		    	setTimer(time_green * 100);    // set 3s cho trang thai red_green
//		    	is_initialized = 0; // Đảm bảo lần sau vào AUTO_RED_GREEN, sẽ khởi tạo lại biến
//		    	break;
//		    case AUTO_RED_GREEN:
//		    	if (is_initialized == 0) {  // Chỉ khởi tạo lại một lần khi vào trạng thái AUTO_RED_GREEN
//					time_red_copy = time_red;
//					is_initialized = 1;
//				}
//		    	light_1(red);
//		    	light_2(green);
//                if(timer_EN_GR1_flag == 1)
//                {
//                	setTimer_EN_GR1(freq1_led7);
//                	switch(led7_1){
//                		case 0:
//                			HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, GPIO_PIN_SET);
//                			display_1(time_red_copy);
//                			led7_1 = 1;
//                		case 1:
//                			HAL_GPIO_WritePin(EN4_GPIO_Port, EN4_Pin, GPIO_PIN_SET);
//                			display_2(time_red_copy);
//                			led7_1 = 0;
//                	}
//                }
//                if(timer1_1s_flag == 1)
//                {
//                	setTimer_1s1(100);
//                	time_red_copy--;
//                }
//
//		    	if(timer_flag == 1)
//		    	{
//		    		setTimer(time_yellow * 100); // set 2s cho trang thai red_yellow
//		    		status = AUTO_RED_YELLOW;
//		    		is_initialized = 0;  // Đảm bảo khi quay lại AUTO_RED_GREEN sẽ khởi tạo lại biến
//		    	}
//		    	if(button_flag[0] == 1)
//		    	{
//		    		button_flag[0] = 0;
////		    		setTimer(800);      // neu khong nhan gi nua, 8s sau quay ve trang thai auto.
//		    		status = MAN_RED;   // moi truong hop, khi nhan button_1 thi deu ve man_red
//		    	}
//		    	break;
//		    case AUTO_RED_YELLOW:
//		    	light_1(red);
//		    	light_2(yellow);
//		    	if(timer_flag == 1)
//		    	{
//		    		setTimer(time_green * 100);
//		    		status = AUTO_GREEN_RED;
//		    	}
//		    	if(button_flag[0] == 1)
//				{
//		    		button_flag[0] = 0;
//					status = MAN_RED;  // moi truong hop, khi nhan button_1 thi deu ve man_red
//				}
//		    	break;
//		    case AUTO_GREEN_RED:
//		    	light_1(green);
//		    	light_2(red);
//		        if(timer_flag == 1)
//		        {
//		    		setTimer(time_yellow * 100);
//		    		status = AUTO_YELLOW_RED;
//		    	}
//		        if(button_flag[0] == 1)
//				{
//		        	button_flag[0] = 0;
//					status = MAN_RED;  // moi truong hop, khi nhan button_1 thi deu ve man_red
//				}
//		    	break;
//		    case AUTO_YELLOW_RED:
//				light_1(yellow);
//				light_2(red);
//				if(timer_flag == 1)
//				{
//					setTimer(time_green * 100);
//					status = AUTO_RED_GREEN;
//				}
//				if(button_flag[0] == 1)
//				{
//					button_flag[0] = 0;
//					status = MAN_RED;  // moi truong hop, khi nhan button_1 thi deu ve man_red
//				}
//				break;
//		    default:
//		    	break;
//		}
//}
#include "fsm_automatic.h"

int time_red_copy = 0;
int time_green_copy = 0;
int time_yellow_copy = 0;
int led7_1 = 0;
int led7_2 = 0;
int is_initialized = 0;

void display_7segment(int time) {
    static int last_time = -1;  // Đảm bảo chỉ cập nhật khi giá trị thay đổi

    if (time != last_time) {
        last_time = time;

        // Cập nhật hiển thị trên LED 7 đoạn
        switch(led7_1) {
            case 0:
                HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_SET);
                display_1(time);
                led7_1 = 1;
                break;
            case 1:
                HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_SET);
                display_2(time);
                led7_1 = 0;
                break;
        }
    }
}

void light_1(enum led color) {
    switch(color) {
        case red:
            display_7segment(time_red_copy);
            break;
        case yellow:
            display_7segment(time_yellow_copy);
            break;
        case green:
            display_7segment(time_green_copy);
            break;
        default:
            break;
    }
}

void light_2(enum led color) {
    switch(color) {
        case red:
            display_7segment(time_red_copy);
            break;
        case yellow:
            display_7segment(time_yellow_copy);
            break;
        case green:
            display_7segment(time_green_copy);
            break;
        default:
            break;
    }
}

void fsm_automatic_Run() {
    switch(status) {
        case INIT:
            light_1(black);
            light_2(black);
            status = AUTO_RED_GREEN;
            setTimer(time_green * 100);
            time_red_copy = time_red;
            time_yellow_copy = time_yellow;
            time_green_copy = time_green;
            is_initialized = 0;
            break;

        case AUTO_RED_GREEN:
            if (is_initialized == 0) {
                time_red_copy = time_red;
                is_initialized = 1;
            }
            light_1(red);
            light_2(green);

            if (timer1_1s_flag == 1) {
                setTimer_1s1(100);
                time_red_copy--;
                time_green_copy--;
            }

            if (timer_flag == 1) {
                setTimer(time_yellow * 100);
                status = AUTO_RED_YELLOW;
                is_initialized = 0;
            }
            if (button_flag[0] == 1) {
                button_flag[0] = 0;
                status = MAN_RED;
            }
            break;

        case AUTO_RED_YELLOW:
            if (is_initialized == 0) {
                time_yellow_copy = time_yellow;
                is_initialized = 1;
            }
            light_1(red);
            light_2(yellow);

            if (timer1_1s_flag == 1) {
                setTimer_1s1(100);
                time_yellow_copy--;
            }

            if (timer_flag == 1) {
                setTimer(time_green * 100);
                status = AUTO_GREEN_RED;
                is_initialized = 0;
            }
            if (button_flag[0] == 1) {
                button_flag[0] = 0;
                status = MAN_RED;
            }
            break;

        case AUTO_GREEN_RED:
            if (is_initialized == 0) {
                time_green_copy = time_green;
                is_initialized = 1;
            }
            light_1(green);
            light_2(red);

            if (timer1_1s_flag == 1) {
                setTimer_1s1(100);
                time_green_copy--;
            }

            if (timer_flag == 1) {
                setTimer(time_yellow * 100);
                status = AUTO_YELLOW_RED;
                is_initialized = 0;
            }
            if (button_flag[0] == 1) {
                button_flag[0] = 0;
                status = MAN_RED;
            }
            break;

        case AUTO_YELLOW_RED:
            if (is_initialized == 0) {
                time_yellow_copy = time_yellow;
                is_initialized = 1;
            }
            light_1(yellow);
            light_2(red);

            if (timer1_1s_flag == 1) {
                setTimer_1s1(100);
                time_yellow_copy--;
            }

            if (timer_flag == 1) {
                setTimer(time_green * 100);
                status = AUTO_RED_GREEN;
                is_initialized = 0;
            }
            if (button_flag[0] == 1) {
                button_flag[0] = 0;
                status = MAN_RED;
            }
            break;

        default:
            break;
    }
}

